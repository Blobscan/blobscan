FROM node:22-alpine AS base

ENV PNPM_HOME="/pnpm"
ENV PATH="$PNPM_HOME:$PATH"

RUN apk add --no-cache bash
RUN npm install -g pnpm turbo

COPY . /prepare
WORKDIR /prepare

RUN turbo prune @blobscan/docs --docker --out-dir /prepare/docs-output

FROM base AS builder

ENV NEXT_BUILD_OUTPUT=standalone
ENV NEXT_TELEMETRY_DISABLED=1

WORKDIR /app

COPY --from=base /prepare/docs-output/json .
RUN --mount=type=cache,id=pnpm,target=/pnpm/store pnpm fetch -r
RUN --mount=type=cache,id=pnpm,target=/pnpm/store pnpm install --frozen-lockfile

COPY --from=base /prepare/docs-output/full .
COPY --from=base /prepare/turbo.json .
RUN --mount=type=cache,id=pnpm,target=/pnpm/store pnpm build --filter=@blobscan/docs

FROM node:22-alpine

ENV HOSTNAME=0.0.0.0
ENV PORT=3002

RUN apk add --no-cache bash
RUN addgroup --system --gid 1001 nodejs
RUN adduser --system --uid 1001 nextjs

WORKDIR /app
COPY --from=builder --chown=nextjs:nodejs /app/apps/docs/server.js .
COPY --from=builder --chown=nextjs:nodejs /app/apps/docs/public ./public
COPY --from=builder --chown=nextjs:nodejs /app/apps/docs/.next/standalone ./
COPY --from=builder --chown=nextjs:nodejs /app/apps/docs/.next/static ./.next/static

USER nextjs

EXPOSE 3002

CMD ["node", "server.js"]
