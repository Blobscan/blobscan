// Vitest Snapshot v1, https://vitest.dev/guide/snapshot.html

exports[`BlobPropagator > should throw a valid error when creating a blob propagator with no blob storages 1`] = `"Blob propagator failed: Failed to create blob propagator"`;

exports[`BlobPropagator > should throw a valid error when creating a blob propagator with no blob storages 2`] = `"Temporary blob storage not found"`;

exports[`BlobPropagator > should throw a valid error when creating a blob propagator with no temporary blob storage 1`] = `"Blob propagator failed: Failed to create blob propagator"`;

exports[`BlobPropagator > should throw a valid error when creating a blob propagator with no temporary blob storage 2`] = `"Temporary blob storage not found"`;

exports[`BlobPropagator > when closing > should throw a valid error when the finalizer worker closing operation fails 1`] = `"Blob propagator failed: Failed to perform closing operation"`;

exports[`BlobPropagator > when closing > should throw a valid error when the finalizer worker closing operation fails 2`] = `[Error: Closing finalizer worker failed]`;

exports[`BlobPropagator > when closing > should throw a valid error when the flow producer closing operation fails 1`] = `"Blob propagator failed: Failed to perform closing operation"`;

exports[`BlobPropagator > when closing > should throw a valid error when the flow producer closing operation fails 2`] = `[Error: Closing flow producer failed]`;

exports[`BlobPropagator > when closing > should throw a valid error when the storage worker operation fails 1`] = `"Blob propagator failed: Failed to perform closing operation"`;

exports[`BlobPropagator > when closing > should throw a valid error when the storage worker operation fails 2`] = `[Error: Closing storage worker failed]`;

exports[`BlobPropagator > when propagating a single blob > should throw a valid error if the blob failed to be stored in the temporary blob storage 1`] = `"Blob propagator failed: Failed to propagate blob with hash \\"blobVersionedHash\\""`;

exports[`BlobPropagator > when propagating a single blob > should throw a valid error if the blob failed to be stored in the temporary blob storage 2`] = `[ErrorException: Failed to store blob in temporary storage]`;

exports[`BlobPropagator > when propagating multiple blobs > should create flow jobs correctly 1`] = `
[
  {
    "children": [
      {
        "data": {
          "versionedHash": "blobVersionedHash1",
        },
        "name": "storeBlob:google-worker-blobVersionedHash1",
        "opts": {
          "attempts": 3,
          "backoff": {
            "delay": 1000,
            "type": "exponential",
          },
          "jobId": "google-worker-blobVersionedHash1",
          "removeDependencyOnFailure": true,
        },
        "queueName": "google-worker",
      },
      {
        "data": {
          "versionedHash": "blobVersionedHash1",
        },
        "name": "storeBlob:postgres-worker-blobVersionedHash1",
        "opts": {
          "attempts": 3,
          "backoff": {
            "delay": 1000,
            "type": "exponential",
          },
          "jobId": "postgres-worker-blobVersionedHash1",
          "removeDependencyOnFailure": true,
        },
        "queueName": "postgres-worker",
      },
    ],
    "data": {
      "temporaryBlobUri": "test-blobscan-blobs/70118930558/ob/Ve/rs/obVersionedHash1.txt",
    },
    "name": "propagateBlob:finalizer-worker-blobVersionedHash1",
    "opts": {
      "attempts": 3,
      "backoff": {
        "delay": 1000,
        "type": "exponential",
      },
      "jobId": "finalizer-worker-blobVersionedHash1",
    },
    "queueName": "finalizer-worker",
  },
  {
    "children": [
      {
        "data": {
          "versionedHash": "blobVersionedHash2",
        },
        "name": "storeBlob:google-worker-blobVersionedHash2",
        "opts": {
          "attempts": 3,
          "backoff": {
            "delay": 1000,
            "type": "exponential",
          },
          "jobId": "google-worker-blobVersionedHash2",
          "removeDependencyOnFailure": true,
        },
        "queueName": "google-worker",
      },
      {
        "data": {
          "versionedHash": "blobVersionedHash2",
        },
        "name": "storeBlob:postgres-worker-blobVersionedHash2",
        "opts": {
          "attempts": 3,
          "backoff": {
            "delay": 1000,
            "type": "exponential",
          },
          "jobId": "postgres-worker-blobVersionedHash2",
          "removeDependencyOnFailure": true,
        },
        "queueName": "postgres-worker",
      },
    ],
    "data": {
      "temporaryBlobUri": "test-blobscan-blobs/70118930558/ob/Ve/rs/obVersionedHash2.txt",
    },
    "name": "propagateBlob:finalizer-worker-blobVersionedHash2",
    "opts": {
      "attempts": 3,
      "backoff": {
        "delay": 1000,
        "type": "exponential",
      },
      "jobId": "finalizer-worker-blobVersionedHash2",
    },
    "queueName": "finalizer-worker",
  },
]
`;

exports[`BlobPropagator > when propagating multiple blobs > should throw a valid error if some of the blobs failed to be stored in the temporary blob storage 1`] = `"Blob propagator failed: Failed to propagate blobs with hashes \\"blobVersionedHash1\\", \\"blobVersionedHash2\\""`;

exports[`BlobPropagator > when propagating multiple blobs > should throw a valid error if some of the blobs failed to be stored in the temporary blob storage 2`] = `[Error: Internal temporal blob storage error]`;
