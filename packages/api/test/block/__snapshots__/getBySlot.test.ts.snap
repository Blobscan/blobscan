// Vitest Snapshot v1, https://vitest.dev/guide/snapshot.html

exports[`getBySlot > should fail when trying to get a block with a negative slot 1`] = `
"[
  {
    \\"code\\": \\"too_small\\",
    \\"minimum\\": 0,
    \\"type\\": \\"number\\",
    \\"inclusive\\": false,
    \\"exact\\": false,
    \\"message\\": \\"Number must be greater than 0\\",
    \\"path\\": [
      \\"slot\\"
    ]
  }
]"
`;

exports[`getBySlot > should fail when trying to get a block with a negative slot 2`] = `
[ZodError: [
  {
    "code": "too_small",
    "minimum": 0,
    "type": "number",
    "inclusive": false,
    "exact": false,
    "message": "Number must be greater than 0",
    "path": [
      "slot"
    ]
  }
]]
`;

exports[`getBySlot > should fail when trying to get a reorged block by slot 1`] = `"Block with slot 110 not found"`;

exports[`getBySlot > should get a block by slot 1`] = `
{
  "blobAsCalldataGasUsed": 2042780n,
  "blobGasBaseFee": 17301504n,
  "blobGasPrice": 22n,
  "blobGasUsed": 786432n,
  "ethUsdPrice": undefined,
  "excessBlobGas": 15000n,
  "hash": "0x1000000000000000000000000000000000000000000000000000000000000000",
  "number": 1001,
  "slot": 101,
  "timestamp": 2022-10-16T12:00:00.000Z,
  "transactions": [
    {
      "blobs": [
        {
          "dataStorageReferences": [
            {
              "storage": "google",
              "url": "http://localhost:4443/storage/v1/b/blobscan-test-bucket/o/1%2Fob%2FHa%2Fsh%2FobHash001.bin?alt=media",
            },
            {
              "storage": "swarm",
              "url": "https://api.gateway.ethswarm.org/bzz/bzz://some-hash-for-blobHash001",
            },
          ],
          "versionedHash": "blobHash001",
        },
        {
          "dataStorageReferences": [
            {
              "storage": "google",
              "url": "http://localhost:4443/storage/v1/b/blobscan-test-bucket/o/1%2Fob%2FHa%2Fsh%2FobHash002.bin?alt=media",
            },
          ],
          "versionedHash": "blobHash002",
        },
        {
          "dataStorageReferences": [
            {
              "storage": "google",
              "url": "http://localhost:4443/storage/v1/b/blobscan-test-bucket/o/1%2Fob%2FHa%2Fsh%2FobHash003.bin?alt=media",
            },
            {
              "storage": "swarm",
              "url": "https://api.gateway.ethswarm.org/bzz/bzz://some-hash-for-blobHash003",
            },
          ],
          "versionedHash": "blobHash003",
        },
      ],
      "hash": "txHash001",
    },
    {
      "blobs": [
        {
          "dataStorageReferences": [
            {
              "storage": "google",
              "url": "http://localhost:4443/storage/v1/b/blobscan-test-bucket/o/1%2Fob%2FHa%2Fsh%2FobHash001.bin?alt=media",
            },
            {
              "storage": "swarm",
              "url": "https://api.gateway.ethswarm.org/bzz/bzz://some-hash-for-blobHash001",
            },
          ],
          "versionedHash": "blobHash001",
        },
      ],
      "hash": "txHash002",
    },
    {
      "blobs": [
        {
          "dataStorageReferences": [
            {
              "storage": "google",
              "url": "http://localhost:4443/storage/v1/b/blobscan-test-bucket/o/1%2Fob%2FHa%2Fsh%2FobHash001.bin?alt=media",
            },
            {
              "storage": "swarm",
              "url": "https://api.gateway.ethswarm.org/bzz/bzz://some-hash-for-blobHash001",
            },
          ],
          "versionedHash": "blobHash001",
        },
        {
          "dataStorageReferences": [
            {
              "storage": "google",
              "url": "http://localhost:4443/storage/v1/b/blobscan-test-bucket/o/1%2Fob%2FHa%2Fsh%2FobHash002.bin?alt=media",
            },
          ],
          "versionedHash": "blobHash002",
        },
      ],
      "hash": "txHash003",
    },
  ],
}
`;
