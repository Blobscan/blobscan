// Vitest Snapshot v1, https://vitest.dev/guide/snapshot.html

exports[`Transaction router > getAll > when getting paginated transaction results > should default to the first page when no page was specified 1`] = `
[
  {
    "blobAsCalldataGasUsed": "1000",
    "blobs": [
      {
        "blob": {
          "commitment": "commitment001",
          "size": 1000,
        },
        "blobHash": "blobHash001",
        "index": 0,
      },
    ],
    "block": {
      "blobGasPrice": "22",
      "excessBlobGas": "15000",
      "timestamp": 2023-08-31T16:00:00.000Z,
    },
    "blockNumber": 1008,
    "fromId": "address2",
    "gasPrice": "10",
    "hash": "txHash016",
    "maxFeePerBlobGas": "100",
    "toId": "address4",
  },
  {
    "blobAsCalldataGasUsed": "1000",
    "blobs": [
      {
        "blob": {
          "commitment": "commitment004",
          "size": 1300,
        },
        "blobHash": "blobHash004",
        "index": 0,
      },
      {
        "blob": {
          "commitment": "commitment004",
          "size": 1300,
        },
        "blobHash": "blobHash004",
        "index": 1,
      },
      {
        "blob": {
          "commitment": "commitment004",
          "size": 1300,
        },
        "blobHash": "blobHash004",
        "index": 2,
      },
    ],
    "block": {
      "blobGasPrice": "22",
      "excessBlobGas": "15000",
      "timestamp": 2023-08-31T14:00:00.000Z,
    },
    "blockNumber": 1007,
    "fromId": "address5",
    "gasPrice": "10",
    "hash": "txHash015",
    "maxFeePerBlobGas": "100",
    "toId": "address4",
  },
]
`;

exports[`Transaction router > getAll > when getting paginated transaction results > should return the correct number of results 1`] = `
[
  {
    "blobAsCalldataGasUsed": "1000",
    "blobs": [
      {
        "blob": {
          "commitment": "commitment001",
          "size": 1000,
        },
        "blobHash": "blobHash001",
        "index": 0,
      },
    ],
    "block": {
      "blobGasPrice": "22",
      "excessBlobGas": "15000",
      "timestamp": 2023-08-31T16:00:00.000Z,
    },
    "blockNumber": 1008,
    "fromId": "address2",
    "gasPrice": "10",
    "hash": "txHash016",
    "maxFeePerBlobGas": "100",
    "toId": "address4",
  },
  {
    "blobAsCalldataGasUsed": "1000",
    "blobs": [
      {
        "blob": {
          "commitment": "commitment004",
          "size": 1300,
        },
        "blobHash": "blobHash004",
        "index": 0,
      },
      {
        "blob": {
          "commitment": "commitment004",
          "size": 1300,
        },
        "blobHash": "blobHash004",
        "index": 1,
      },
      {
        "blob": {
          "commitment": "commitment004",
          "size": 1300,
        },
        "blobHash": "blobHash004",
        "index": 2,
      },
    ],
    "block": {
      "blobGasPrice": "22",
      "excessBlobGas": "15000",
      "timestamp": 2023-08-31T14:00:00.000Z,
    },
    "blockNumber": 1007,
    "fromId": "address5",
    "gasPrice": "10",
    "hash": "txHash015",
    "maxFeePerBlobGas": "100",
    "toId": "address4",
  },
]
`;

exports[`Transaction router > getByAddress > when getting paginated address's transactions results > should default to the first page when no page was specified 1`] = `
[
  {
    "blobAsCalldataGasUsed": "1000",
    "blobs": [
      {
        "blob": {
          "commitment": "commitment001",
          "size": 1000,
        },
        "blobHash": "blobHash001",
        "index": 0,
      },
    ],
    "block": {
      "blobGasPrice": "22",
      "excessBlobGas": "15000",
      "timestamp": 2023-08-31T16:00:00.000Z,
    },
    "blockNumber": 1008,
    "fromId": "address2",
    "gasPrice": "10",
    "hash": "txHash016",
    "maxFeePerBlobGas": "100",
    "toId": "address4",
  },
  {
    "blobAsCalldataGasUsed": "1000",
    "blobs": [
      {
        "blob": {
          "commitment": "commitment001",
          "size": 1000,
        },
        "blobHash": "blobHash001",
        "index": 0,
      },
      {
        "blob": {
          "commitment": "commitment001",
          "size": 1000,
        },
        "blobHash": "blobHash001",
        "index": 1,
      },
      {
        "blob": {
          "commitment": "commitment001",
          "size": 1000,
        },
        "blobHash": "blobHash001",
        "index": 2,
      },
    ],
    "block": {
      "blobGasPrice": "20",
      "excessBlobGas": "10000",
      "timestamp": 2023-08-28T10:00:00.000Z,
    },
    "blockNumber": 1005,
    "fromId": "address2",
    "gasPrice": "10",
    "hash": "txHash012",
    "maxFeePerBlobGas": "100",
    "toId": "address4",
  },
]
`;

exports[`Transaction router > getByAddress > when getting paginated address's transactions results > should return the correct number of results 1`] = `
[
  {
    "blobAsCalldataGasUsed": "1000",
    "blobs": [
      {
        "blob": {
          "commitment": "commitment001",
          "size": 1000,
        },
        "blobHash": "blobHash001",
        "index": 0,
      },
    ],
    "block": {
      "blobGasPrice": "22",
      "excessBlobGas": "15000",
      "timestamp": 2023-08-31T16:00:00.000Z,
    },
    "blockNumber": 1008,
    "fromId": "address2",
    "gasPrice": "10",
    "hash": "txHash016",
    "maxFeePerBlobGas": "100",
    "toId": "address4",
  },
  {
    "blobAsCalldataGasUsed": "1000",
    "blobs": [
      {
        "blob": {
          "commitment": "commitment001",
          "size": 1000,
        },
        "blobHash": "blobHash001",
        "index": 0,
      },
      {
        "blob": {
          "commitment": "commitment001",
          "size": 1000,
        },
        "blobHash": "blobHash001",
        "index": 1,
      },
      {
        "blob": {
          "commitment": "commitment001",
          "size": 1000,
        },
        "blobHash": "blobHash001",
        "index": 2,
      },
    ],
    "block": {
      "blobGasPrice": "20",
      "excessBlobGas": "10000",
      "timestamp": 2023-08-28T10:00:00.000Z,
    },
    "blockNumber": 1005,
    "fromId": "address2",
    "gasPrice": "10",
    "hash": "txHash012",
    "maxFeePerBlobGas": "100",
    "toId": "address4",
  },
]
`;

exports[`Transaction router > getByHash > should get a transaction by hash correctly 1`] = `
{
  "blobAsCalldataGasUsed": "1000",
  "blobs": [
    {
      "blob": {
        "commitment": "commitment001",
        "size": 1000,
      },
      "blobHash": "blobHash001",
      "index": 0,
    },
    {
      "blob": {
        "commitment": "commitment002",
        "size": 1100,
      },
      "blobHash": "blobHash002",
      "index": 1,
    },
    {
      "blob": {
        "commitment": "commitment003",
        "size": 1200,
      },
      "blobHash": "blobHash003",
      "index": 2,
    },
  ],
  "block": {
    "blobGasPrice": "22",
    "excessBlobGas": "15000",
    "timestamp": 2022-10-16T12:00:00.000Z,
  },
  "blockNumber": 1001,
  "fromId": "address1",
  "gasPrice": "10",
  "hash": "txHash001",
  "maxFeePerBlobGas": "100",
  "toId": "address2",
}
`;
