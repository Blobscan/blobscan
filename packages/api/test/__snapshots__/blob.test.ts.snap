// Vitest Snapshot v1, https://vitest.dev/guide/snapshot.html

exports[`Blob router > createWeaveVmReferences > when authorized > should fail when one or more provided blobs do not exist 1`] = `"Couldn't found the following blobs: \\"nonExistingBlobHash\\""`;

exports[`Blob router > createWeaveVmReferences > when authorized > should fail when one or more provided blobs do not exist 2`] = `undefined`;

exports[`Blob router > getAll > when getting expanded blob results > should return the correct expanded block 1`] = `
[
  {
    "block": {
      "blobAsCalldataGasUsed": "255000",
      "blobGasPrice": "22",
      "blobGasUsed": "5500000",
      "excessBlobGas": "15000",
      "slot": 108,
    },
    "blockHash": "0x8000000000000000000000000000000000000000000000000000000000000000",
    "blockNumber": 1008,
    "blockTimestamp": "2023-08-31T16:00:00.000Z",
    "commitment": "0xb10000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000",
    "dataStorageReferences": [],
    "index": 0,
    "proof": "b10000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000",
    "size": 1500,
    "transaction": {
      "category": "other",
    },
    "txHash": "txHash016",
    "txIndex": 0,
    "versionedHash": "0xb100000000000000000000000000000000000000000000000000000000000000",
  },
  {
    "block": {
      "blobAsCalldataGasUsed": "255000",
      "blobGasPrice": "22",
      "blobGasUsed": "5500000",
      "excessBlobGas": "15000",
      "slot": 107,
    },
    "blockHash": "0x7000000000000000000000000000000000000000000000000000000000000000",
    "blockNumber": 1007,
    "blockTimestamp": "2023-08-31T14:00:00.000Z",
    "commitment": "commitment004",
    "dataStorageReferences": [
      {
        "storage": "google",
        "url": "https://storage.googleapis.com/blobscan-test-bucket/70118930558/ob/Ha/sh/obHash004.txt",
      },
      {
        "storage": "postgres",
        "url": "http://localhost:3001/blobs/blobHash004/data",
      },
    ],
    "index": 2,
    "proof": "proof004",
    "size": 1300,
    "transaction": {
      "category": "rollup",
      "rollup": "optimism",
    },
    "txHash": "txHash015",
    "txIndex": 0,
    "versionedHash": "blobHash004",
  },
]
`;

exports[`Blob router > getAll > when getting expanded blob results > should return the correct expanded results when multiple expands are requested 1`] = `
[
  {
    "block": {
      "blobAsCalldataGasUsed": "255000",
      "blobGasPrice": "22",
      "blobGasUsed": "5500000",
      "excessBlobGas": "15000",
      "slot": 108,
    },
    "blockHash": "0x8000000000000000000000000000000000000000000000000000000000000000",
    "blockNumber": 1008,
    "blockTimestamp": "2023-08-31T16:00:00.000Z",
    "commitment": "0xb10000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000",
    "dataStorageReferences": [],
    "index": 0,
    "proof": "b10000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000",
    "size": 1500,
    "transaction": {
      "blobAsCalldataGasUsed": "1000",
      "blobGasUsed": "131072",
      "category": "other",
      "from": "address2",
      "index": 0,
      "maxFeePerBlobGas": "100",
      "to": "address4",
    },
    "txHash": "txHash016",
    "txIndex": 0,
    "versionedHash": "0xb100000000000000000000000000000000000000000000000000000000000000",
  },
  {
    "block": {
      "blobAsCalldataGasUsed": "255000",
      "blobGasPrice": "22",
      "blobGasUsed": "5500000",
      "excessBlobGas": "15000",
      "slot": 107,
    },
    "blockHash": "0x7000000000000000000000000000000000000000000000000000000000000000",
    "blockNumber": 1007,
    "blockTimestamp": "2023-08-31T14:00:00.000Z",
    "commitment": "commitment004",
    "dataStorageReferences": [
      {
        "storage": "google",
        "url": "https://storage.googleapis.com/blobscan-test-bucket/70118930558/ob/Ha/sh/obHash004.txt",
      },
      {
        "storage": "postgres",
        "url": "http://localhost:3001/blobs/blobHash004/data",
      },
    ],
    "index": 2,
    "proof": "proof004",
    "size": 1300,
    "transaction": {
      "blobAsCalldataGasUsed": "1000",
      "blobGasUsed": "393216",
      "category": "rollup",
      "from": "optimismAddress",
      "index": 0,
      "maxFeePerBlobGas": "100",
      "rollup": "optimism",
      "to": "address4",
    },
    "txHash": "txHash015",
    "txIndex": 0,
    "versionedHash": "blobHash004",
  },
]
`;

exports[`Blob router > getAll > when getting expanded blob results > should return the correct expanded transaction 1`] = `
[
  {
    "blockHash": "0x8000000000000000000000000000000000000000000000000000000000000000",
    "blockNumber": 1008,
    "blockTimestamp": "2023-08-31T16:00:00.000Z",
    "commitment": "0xb10000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000",
    "dataStorageReferences": [],
    "index": 0,
    "proof": "b10000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000",
    "size": 1500,
    "transaction": {
      "blobAsCalldataGasUsed": "1000",
      "blobGasUsed": "131072",
      "category": "other",
      "from": "address2",
      "index": 0,
      "maxFeePerBlobGas": "100",
      "to": "address4",
    },
    "txHash": "txHash016",
    "txIndex": 0,
    "versionedHash": "0xb100000000000000000000000000000000000000000000000000000000000000",
  },
  {
    "blockHash": "0x7000000000000000000000000000000000000000000000000000000000000000",
    "blockNumber": 1007,
    "blockTimestamp": "2023-08-31T14:00:00.000Z",
    "commitment": "commitment004",
    "dataStorageReferences": [
      {
        "storage": "google",
        "url": "https://storage.googleapis.com/blobscan-test-bucket/70118930558/ob/Ha/sh/obHash004.txt",
      },
      {
        "storage": "postgres",
        "url": "http://localhost:3001/blobs/blobHash004/data",
      },
    ],
    "index": 2,
    "proof": "proof004",
    "size": 1300,
    "transaction": {
      "blobAsCalldataGasUsed": "1000",
      "blobGasUsed": "393216",
      "category": "rollup",
      "from": "optimismAddress",
      "index": 0,
      "maxFeePerBlobGas": "100",
      "rollup": "optimism",
      "to": "address4",
    },
    "txHash": "txHash015",
    "txIndex": 0,
    "versionedHash": "blobHash004",
  },
]
`;

exports[`Blob router > getAll > when getting filtered blob results > should return results up to and including the specified slot 1`] = `
[
  {
    "blockHash": "blockHash002",
    "blockNumber": 1002,
    "blockTimestamp": "2023-05-10T12:00:00.000Z",
    "commitment": "0x0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000b3",
    "dataStorageReferences": [
      {
        "storage": "postgres",
        "url": "http://localhost:3001/blobs/0x000000000000000000000000000000000000000000000000000000000000b3/data",
      },
    ],
    "index": 2,
    "proof": "0x000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000ab3",
    "size": 131072,
    "transaction": {
      "category": "rollup",
      "rollup": "base",
    },
    "txHash": "txHash004",
    "txIndex": 0,
    "versionedHash": "0x000000000000000000000000000000000000000000000000000000000000b3",
  },
  {
    "blockHash": "blockHash002",
    "blockNumber": 1002,
    "blockTimestamp": "2023-05-10T12:00:00.000Z",
    "commitment": "0x0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000b2",
    "dataStorageReferences": [
      {
        "storage": "postgres",
        "url": "http://localhost:3001/blobs/0x000000000000000000000000000000000000000000000000000000000000b2/data",
      },
    ],
    "index": 1,
    "proof": "0x000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000ab2",
    "size": 131072,
    "transaction": {
      "category": "rollup",
      "rollup": "base",
    },
    "txHash": "txHash004",
    "txIndex": 0,
    "versionedHash": "0x000000000000000000000000000000000000000000000000000000000000b2",
  },
  {
    "blockHash": "blockHash002",
    "blockNumber": 1002,
    "blockTimestamp": "2023-05-10T12:00:00.000Z",
    "commitment": "0x0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000b1",
    "dataStorageReferences": [
      {
        "storage": "postgres",
        "url": "http://localhost:3001/blobs/0x000000000000000000000000000000000000000000000000000000000000b1/data",
      },
    ],
    "index": 0,
    "proof": "0x000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000ab1",
    "size": 131072,
    "transaction": {
      "category": "rollup",
      "rollup": "base",
    },
    "txHash": "txHash004",
    "txIndex": 0,
    "versionedHash": "0x000000000000000000000000000000000000000000000000000000000000b1",
  },
  {
    "blockHash": "blockHash001",
    "blockNumber": 1001,
    "blockTimestamp": "2022-10-16T12:00:00.000Z",
    "commitment": "commitment002",
    "dataStorageReferences": [
      {
        "storage": "google",
        "url": "https://storage.googleapis.com/blobscan-test-bucket/70118930558/ob/Ha/sh/obHash002.txt",
      },
    ],
    "index": 1,
    "proof": "proof002",
    "size": 1100,
    "transaction": {
      "category": "rollup",
      "rollup": "optimism",
    },
    "txHash": "txHash003",
    "txIndex": 2,
    "versionedHash": "blobHash002",
  },
  {
    "blockHash": "blockHash001",
    "blockNumber": 1001,
    "blockTimestamp": "2022-10-16T12:00:00.000Z",
    "commitment": "commitment001",
    "dataStorageReferences": [
      {
        "storage": "google",
        "url": "https://storage.googleapis.com/blobscan-test-bucket/70118930558/ob/Ha/sh/obHash001.txt",
      },
      {
        "storage": "swarm",
        "url": "https://gateway.ethswarm.org/access/bzz://some-hash-for-blobHash001",
      },
    ],
    "index": 0,
    "proof": "proof001",
    "size": 1000,
    "transaction": {
      "category": "rollup",
      "rollup": "optimism",
    },
    "txHash": "txHash003",
    "txIndex": 2,
    "versionedHash": "blobHash001",
  },
  {
    "blockHash": "blockHash001",
    "blockNumber": 1001,
    "blockTimestamp": "2022-10-16T12:00:00.000Z",
    "commitment": "commitment001",
    "dataStorageReferences": [
      {
        "storage": "google",
        "url": "https://storage.googleapis.com/blobscan-test-bucket/70118930558/ob/Ha/sh/obHash001.txt",
      },
      {
        "storage": "swarm",
        "url": "https://gateway.ethswarm.org/access/bzz://some-hash-for-blobHash001",
      },
    ],
    "index": 0,
    "proof": "proof001",
    "size": 1000,
    "transaction": {
      "category": "other",
    },
    "txHash": "txHash002",
    "txIndex": 1,
    "versionedHash": "blobHash001",
  },
  {
    "blockHash": "blockHash001",
    "blockNumber": 1001,
    "blockTimestamp": "2022-10-16T12:00:00.000Z",
    "commitment": "commitment003",
    "dataStorageReferences": [
      {
        "storage": "google",
        "url": "https://storage.googleapis.com/blobscan-test-bucket/70118930558/ob/Ha/sh/obHash003.txt",
      },
      {
        "storage": "swarm",
        "url": "https://gateway.ethswarm.org/access/bzz://some-hash-for-blobHash003",
      },
    ],
    "index": 2,
    "proof": "proof003",
    "size": 1200,
    "transaction": {
      "category": "other",
    },
    "txHash": "txHash001",
    "txIndex": 0,
    "versionedHash": "blobHash003",
  },
  {
    "blockHash": "blockHash001",
    "blockNumber": 1001,
    "blockTimestamp": "2022-10-16T12:00:00.000Z",
    "commitment": "commitment002",
    "dataStorageReferences": [
      {
        "storage": "google",
        "url": "https://storage.googleapis.com/blobscan-test-bucket/70118930558/ob/Ha/sh/obHash002.txt",
      },
    ],
    "index": 1,
    "proof": "proof002",
    "size": 1100,
    "transaction": {
      "category": "other",
    },
    "txHash": "txHash001",
    "txIndex": 0,
    "versionedHash": "blobHash002",
  },
  {
    "blockHash": "blockHash001",
    "blockNumber": 1001,
    "blockTimestamp": "2022-10-16T12:00:00.000Z",
    "commitment": "commitment001",
    "dataStorageReferences": [
      {
        "storage": "google",
        "url": "https://storage.googleapis.com/blobscan-test-bucket/70118930558/ob/Ha/sh/obHash001.txt",
      },
      {
        "storage": "swarm",
        "url": "https://gateway.ethswarm.org/access/bzz://some-hash-for-blobHash001",
      },
    ],
    "index": 0,
    "proof": "proof001",
    "size": 1000,
    "transaction": {
      "category": "other",
    },
    "txHash": "txHash001",
    "txIndex": 0,
    "versionedHash": "blobHash001",
  },
]
`;

exports[`Blob router > getAll > when getting filtered blob results > should return the latest results when no sort was specified 1`] = `
[
  {
    "blockHash": "0x8000000000000000000000000000000000000000000000000000000000000000",
    "blockNumber": 1008,
    "blockTimestamp": "2023-08-31T16:00:00.000Z",
    "commitment": "0xb10000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000",
    "dataStorageReferences": [],
    "index": 0,
    "proof": "b10000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000",
    "size": 1500,
    "transaction": {
      "category": "other",
    },
    "txHash": "txHash016",
    "txIndex": 0,
    "versionedHash": "0xb100000000000000000000000000000000000000000000000000000000000000",
  },
  {
    "blockHash": "0x7000000000000000000000000000000000000000000000000000000000000000",
    "blockNumber": 1007,
    "blockTimestamp": "2023-08-31T14:00:00.000Z",
    "commitment": "commitment004",
    "dataStorageReferences": [
      {
        "storage": "google",
        "url": "https://storage.googleapis.com/blobscan-test-bucket/70118930558/ob/Ha/sh/obHash004.txt",
      },
      {
        "storage": "postgres",
        "url": "http://localhost:3001/blobs/blobHash004/data",
      },
    ],
    "index": 2,
    "proof": "proof004",
    "size": 1300,
    "transaction": {
      "category": "rollup",
      "rollup": "optimism",
    },
    "txHash": "txHash015",
    "txIndex": 0,
    "versionedHash": "blobHash004",
  },
  {
    "blockHash": "0x7000000000000000000000000000000000000000000000000000000000000000",
    "blockNumber": 1007,
    "blockTimestamp": "2023-08-31T14:00:00.000Z",
    "commitment": "commitment004",
    "dataStorageReferences": [
      {
        "storage": "google",
        "url": "https://storage.googleapis.com/blobscan-test-bucket/70118930558/ob/Ha/sh/obHash004.txt",
      },
      {
        "storage": "postgres",
        "url": "http://localhost:3001/blobs/blobHash004/data",
      },
    ],
    "index": 1,
    "proof": "proof004",
    "size": 1300,
    "transaction": {
      "category": "rollup",
      "rollup": "optimism",
    },
    "txHash": "txHash015",
    "txIndex": 0,
    "versionedHash": "blobHash004",
  },
]
`;

exports[`Blob router > getAll > when getting filtered blob results > should return the oldest results when ascending order is specified 1`] = `
[
  {
    "blockHash": "blockHash001",
    "blockNumber": 1001,
    "blockTimestamp": "2022-10-16T12:00:00.000Z",
    "commitment": "commitment001",
    "dataStorageReferences": [
      {
        "storage": "google",
        "url": "https://storage.googleapis.com/blobscan-test-bucket/70118930558/ob/Ha/sh/obHash001.txt",
      },
      {
        "storage": "swarm",
        "url": "https://gateway.ethswarm.org/access/bzz://some-hash-for-blobHash001",
      },
    ],
    "index": 0,
    "proof": "proof001",
    "size": 1000,
    "transaction": {
      "category": "other",
    },
    "txHash": "txHash001",
    "txIndex": 0,
    "versionedHash": "blobHash001",
  },
  {
    "blockHash": "blockHash001",
    "blockNumber": 1001,
    "blockTimestamp": "2022-10-16T12:00:00.000Z",
    "commitment": "commitment002",
    "dataStorageReferences": [
      {
        "storage": "google",
        "url": "https://storage.googleapis.com/blobscan-test-bucket/70118930558/ob/Ha/sh/obHash002.txt",
      },
    ],
    "index": 1,
    "proof": "proof002",
    "size": 1100,
    "transaction": {
      "category": "other",
    },
    "txHash": "txHash001",
    "txIndex": 0,
    "versionedHash": "blobHash002",
  },
  {
    "blockHash": "blockHash001",
    "blockNumber": 1001,
    "blockTimestamp": "2022-10-16T12:00:00.000Z",
    "commitment": "commitment003",
    "dataStorageReferences": [
      {
        "storage": "google",
        "url": "https://storage.googleapis.com/blobscan-test-bucket/70118930558/ob/Ha/sh/obHash003.txt",
      },
      {
        "storage": "swarm",
        "url": "https://gateway.ethswarm.org/access/bzz://some-hash-for-blobHash003",
      },
    ],
    "index": 2,
    "proof": "proof003",
    "size": 1200,
    "transaction": {
      "category": "other",
    },
    "txHash": "txHash001",
    "txIndex": 0,
    "versionedHash": "blobHash003",
  },
]
`;

exports[`Blob router > getAll > when getting filtered blob results > should return the results corresponding to a provided rollup 1`] = `
[
  {
    "blockHash": "0x7000000000000000000000000000000000000000000000000000000000000000",
    "blockNumber": 1007,
    "blockTimestamp": "2023-08-31T14:00:00.000Z",
    "commitment": "commitment004",
    "dataStorageReferences": [
      {
        "storage": "google",
        "url": "https://storage.googleapis.com/blobscan-test-bucket/70118930558/ob/Ha/sh/obHash004.txt",
      },
      {
        "storage": "postgres",
        "url": "http://localhost:3001/blobs/blobHash004/data",
      },
    ],
    "index": 2,
    "proof": "proof004",
    "size": 1300,
    "transaction": {
      "category": "rollup",
      "rollup": "optimism",
    },
    "txHash": "txHash015",
    "txIndex": 0,
    "versionedHash": "blobHash004",
  },
  {
    "blockHash": "0x7000000000000000000000000000000000000000000000000000000000000000",
    "blockNumber": 1007,
    "blockTimestamp": "2023-08-31T14:00:00.000Z",
    "commitment": "commitment004",
    "dataStorageReferences": [
      {
        "storage": "google",
        "url": "https://storage.googleapis.com/blobscan-test-bucket/70118930558/ob/Ha/sh/obHash004.txt",
      },
      {
        "storage": "postgres",
        "url": "http://localhost:3001/blobs/blobHash004/data",
      },
    ],
    "index": 1,
    "proof": "proof004",
    "size": 1300,
    "transaction": {
      "category": "rollup",
      "rollup": "optimism",
    },
    "txHash": "txHash015",
    "txIndex": 0,
    "versionedHash": "blobHash004",
  },
  {
    "blockHash": "0x7000000000000000000000000000000000000000000000000000000000000000",
    "blockNumber": 1007,
    "blockTimestamp": "2023-08-31T14:00:00.000Z",
    "commitment": "commitment004",
    "dataStorageReferences": [
      {
        "storage": "google",
        "url": "https://storage.googleapis.com/blobscan-test-bucket/70118930558/ob/Ha/sh/obHash004.txt",
      },
      {
        "storage": "postgres",
        "url": "http://localhost:3001/blobs/blobHash004/data",
      },
    ],
    "index": 0,
    "proof": "proof004",
    "size": 1300,
    "transaction": {
      "category": "rollup",
      "rollup": "optimism",
    },
    "txHash": "txHash015",
    "txIndex": 0,
    "versionedHash": "blobHash004",
  },
  {
    "blockHash": "blockHash005",
    "blockNumber": 1005,
    "blockTimestamp": "2023-08-28T10:00:00.000Z",
    "commitment": "commitment001",
    "dataStorageReferences": [
      {
        "storage": "google",
        "url": "https://storage.googleapis.com/blobscan-test-bucket/70118930558/ob/Ha/sh/obHash001.txt",
      },
      {
        "storage": "swarm",
        "url": "https://gateway.ethswarm.org/access/bzz://some-hash-for-blobHash001",
      },
    ],
    "index": 2,
    "proof": "proof001",
    "size": 1000,
    "transaction": {
      "category": "rollup",
      "rollup": "optimism",
    },
    "txHash": "txHash012",
    "txIndex": 0,
    "versionedHash": "blobHash001",
  },
  {
    "blockHash": "blockHash005",
    "blockNumber": 1005,
    "blockTimestamp": "2023-08-28T10:00:00.000Z",
    "commitment": "commitment001",
    "dataStorageReferences": [
      {
        "storage": "google",
        "url": "https://storage.googleapis.com/blobscan-test-bucket/70118930558/ob/Ha/sh/obHash001.txt",
      },
      {
        "storage": "swarm",
        "url": "https://gateway.ethswarm.org/access/bzz://some-hash-for-blobHash001",
      },
    ],
    "index": 1,
    "proof": "proof001",
    "size": 1000,
    "transaction": {
      "category": "rollup",
      "rollup": "optimism",
    },
    "txHash": "txHash012",
    "txIndex": 0,
    "versionedHash": "blobHash001",
  },
  {
    "blockHash": "blockHash005",
    "blockNumber": 1005,
    "blockTimestamp": "2023-08-28T10:00:00.000Z",
    "commitment": "commitment001",
    "dataStorageReferences": [
      {
        "storage": "google",
        "url": "https://storage.googleapis.com/blobscan-test-bucket/70118930558/ob/Ha/sh/obHash001.txt",
      },
      {
        "storage": "swarm",
        "url": "https://gateway.ethswarm.org/access/bzz://some-hash-for-blobHash001",
      },
    ],
    "index": 0,
    "proof": "proof001",
    "size": 1000,
    "transaction": {
      "category": "rollup",
      "rollup": "optimism",
    },
    "txHash": "txHash012",
    "txIndex": 0,
    "versionedHash": "blobHash001",
  },
  {
    "blockHash": "blockHash004",
    "blockNumber": 1004,
    "blockTimestamp": "2023-08-20T12:00:00.000Z",
    "commitment": "commitment001",
    "dataStorageReferences": [
      {
        "storage": "google",
        "url": "https://storage.googleapis.com/blobscan-test-bucket/70118930558/ob/Ha/sh/obHash001.txt",
      },
      {
        "storage": "swarm",
        "url": "https://gateway.ethswarm.org/access/bzz://some-hash-for-blobHash001",
      },
    ],
    "index": 0,
    "proof": "proof001",
    "size": 1000,
    "transaction": {
      "category": "rollup",
      "rollup": "optimism",
    },
    "txHash": "txHash007",
    "txIndex": 0,
    "versionedHash": "blobHash001",
  },
  {
    "blockHash": "blockHash001",
    "blockNumber": 1001,
    "blockTimestamp": "2022-10-16T12:00:00.000Z",
    "commitment": "commitment002",
    "dataStorageReferences": [
      {
        "storage": "google",
        "url": "https://storage.googleapis.com/blobscan-test-bucket/70118930558/ob/Ha/sh/obHash002.txt",
      },
    ],
    "index": 1,
    "proof": "proof002",
    "size": 1100,
    "transaction": {
      "category": "rollup",
      "rollup": "optimism",
    },
    "txHash": "txHash003",
    "txIndex": 2,
    "versionedHash": "blobHash002",
  },
  {
    "blockHash": "blockHash001",
    "blockNumber": 1001,
    "blockTimestamp": "2022-10-16T12:00:00.000Z",
    "commitment": "commitment001",
    "dataStorageReferences": [
      {
        "storage": "google",
        "url": "https://storage.googleapis.com/blobscan-test-bucket/70118930558/ob/Ha/sh/obHash001.txt",
      },
      {
        "storage": "swarm",
        "url": "https://gateway.ethswarm.org/access/bzz://some-hash-for-blobHash001",
      },
    ],
    "index": 0,
    "proof": "proof001",
    "size": 1000,
    "transaction": {
      "category": "rollup",
      "rollup": "optimism",
    },
    "txHash": "txHash003",
    "txIndex": 2,
    "versionedHash": "blobHash001",
  },
]
`;

exports[`Blob router > getAll > when getting filtered blob results > should return the results corresponding to reorged blocks when 'reorged' type is specified 1`] = `
[
  {
    "blockHash": "0x00903f147f44929cdb385b595b2e745566fe50658362b4e3821fa52b5ebe8f06",
    "blockNumber": 1008,
    "blockTimestamp": "2023-08-31T15:50:00.000Z",
    "commitment": "0x89e6ebcf42d04b1d09f54aa731fd3a2f1df95bd45ba488f28f7e72842a6ea547570d446391c627d4341a1ec922feb529",
    "dataStorageReferences": [
      {
        "storage": "postgres",
        "url": "http://localhost:3001/blobs/0x01d5cc28986f58db309e0fae63b60ade81a01667721e190ec142051240b5d436/data",
      },
    ],
    "index": 0,
    "proof": "0xaf8b65d906c672d670d3d9591ede355ac4dfc2f66f5690e836018fdb8582d3055474e3de6a069d3dfb4c15aa7c7f88a6",
    "size": 128000,
    "transaction": {
      "category": "rollup",
      "rollup": "optimism",
    },
    "txHash": "0xd80214f2e7c7271114f372b6a8baaf39bcb364448788f6d8229d2a903edf9272",
    "txIndex": 0,
    "versionedHash": "0x01d5cc28986f58db309e0fae63b60ade81a01667721e190ec142051240b5d436",
  },
]
`;

exports[`Blob router > getAll > when getting filtered blob results > should return the results corresponding to the block range specified  1`] = `
[
  {
    "blockHash": "blockHash006",
    "blockNumber": 1006,
    "blockTimestamp": "2023-08-31T12:00:00.000Z",
    "commitment": "0xb4f67eb0771fbbf1b06b88ce0e23383daf994320508d44dd30dbd507f598c0d9b3da5a152e41a0428375060c3803b983",
    "dataStorageReferences": [
      {
        "storage": "postgres",
        "url": "http://localhost:3001/blobs/0x010001c79d78a76fb9b4bab3896ee3ea32f3e2607da7801eb1a92da39d6c1368/data",
      },
      {
        "storage": "swarm",
        "url": "https://gateway.ethswarm.org/access/bzz://some-hash-for-blobHash006",
      },
    ],
    "index": 0,
    "proof": "89cf91c4c8be6f2a390d4262425f79dffb74c174fb15a210182184543bf7394e5a7970a774ee8e0dabc315424c22df0f",
    "size": 1500,
    "transaction": {
      "category": "other",
    },
    "txHash": "0x5be77167b05f39ea8950f11b0da2bdfec6e04055030068b051ac5a43aaf251e9",
    "txIndex": 0,
    "versionedHash": "0x010001c79d78a76fb9b4bab3896ee3ea32f3e2607da7801eb1a92da39d6c1368",
  },
  {
    "blockHash": "blockHash005",
    "blockNumber": 1005,
    "blockTimestamp": "2023-08-28T10:00:00.000Z",
    "commitment": "commitment001",
    "dataStorageReferences": [
      {
        "storage": "google",
        "url": "https://storage.googleapis.com/blobscan-test-bucket/70118930558/ob/Ha/sh/obHash001.txt",
      },
      {
        "storage": "swarm",
        "url": "https://gateway.ethswarm.org/access/bzz://some-hash-for-blobHash001",
      },
    ],
    "index": 0,
    "proof": "proof001",
    "size": 1000,
    "transaction": {
      "category": "other",
    },
    "txHash": "txHash013",
    "txIndex": 1,
    "versionedHash": "blobHash001",
  },
  {
    "blockHash": "blockHash005",
    "blockNumber": 1005,
    "blockTimestamp": "2023-08-28T10:00:00.000Z",
    "commitment": "commitment001",
    "dataStorageReferences": [
      {
        "storage": "google",
        "url": "https://storage.googleapis.com/blobscan-test-bucket/70118930558/ob/Ha/sh/obHash001.txt",
      },
      {
        "storage": "swarm",
        "url": "https://gateway.ethswarm.org/access/bzz://some-hash-for-blobHash001",
      },
    ],
    "index": 2,
    "proof": "proof001",
    "size": 1000,
    "transaction": {
      "category": "rollup",
      "rollup": "optimism",
    },
    "txHash": "txHash012",
    "txIndex": 0,
    "versionedHash": "blobHash001",
  },
  {
    "blockHash": "blockHash005",
    "blockNumber": 1005,
    "blockTimestamp": "2023-08-28T10:00:00.000Z",
    "commitment": "commitment001",
    "dataStorageReferences": [
      {
        "storage": "google",
        "url": "https://storage.googleapis.com/blobscan-test-bucket/70118930558/ob/Ha/sh/obHash001.txt",
      },
      {
        "storage": "swarm",
        "url": "https://gateway.ethswarm.org/access/bzz://some-hash-for-blobHash001",
      },
    ],
    "index": 1,
    "proof": "proof001",
    "size": 1000,
    "transaction": {
      "category": "rollup",
      "rollup": "optimism",
    },
    "txHash": "txHash012",
    "txIndex": 0,
    "versionedHash": "blobHash001",
  },
  {
    "blockHash": "blockHash005",
    "blockNumber": 1005,
    "blockTimestamp": "2023-08-28T10:00:00.000Z",
    "commitment": "commitment001",
    "dataStorageReferences": [
      {
        "storage": "google",
        "url": "https://storage.googleapis.com/blobscan-test-bucket/70118930558/ob/Ha/sh/obHash001.txt",
      },
      {
        "storage": "swarm",
        "url": "https://gateway.ethswarm.org/access/bzz://some-hash-for-blobHash001",
      },
    ],
    "index": 0,
    "proof": "proof001",
    "size": 1000,
    "transaction": {
      "category": "rollup",
      "rollup": "optimism",
    },
    "txHash": "txHash012",
    "txIndex": 0,
    "versionedHash": "blobHash001",
  },
  {
    "blockHash": "blockHash004",
    "blockNumber": 1004,
    "blockTimestamp": "2023-08-20T12:00:00.000Z",
    "commitment": "commitment005",
    "dataStorageReferences": [
      {
        "storage": "postgres",
        "url": "http://localhost:3001/blobs/blobHash005/data",
      },
    ],
    "index": 0,
    "proof": "proof005",
    "size": 1400,
    "transaction": {
      "category": "rollup",
      "rollup": "base",
    },
    "txHash": "txHash011",
    "txIndex": 4,
    "versionedHash": "blobHash005",
  },
  {
    "blockHash": "blockHash004",
    "blockNumber": 1004,
    "blockTimestamp": "2023-08-20T12:00:00.000Z",
    "commitment": "commitment003",
    "dataStorageReferences": [
      {
        "storage": "google",
        "url": "https://storage.googleapis.com/blobscan-test-bucket/70118930558/ob/Ha/sh/obHash003.txt",
      },
      {
        "storage": "swarm",
        "url": "https://gateway.ethswarm.org/access/bzz://some-hash-for-blobHash003",
      },
    ],
    "index": 0,
    "proof": "proof003",
    "size": 1200,
    "transaction": {
      "category": "other",
    },
    "txHash": "txHash010",
    "txIndex": 3,
    "versionedHash": "blobHash003",
  },
  {
    "blockHash": "blockHash004",
    "blockNumber": 1004,
    "blockTimestamp": "2023-08-20T12:00:00.000Z",
    "commitment": "commitment003",
    "dataStorageReferences": [
      {
        "storage": "google",
        "url": "https://storage.googleapis.com/blobscan-test-bucket/70118930558/ob/Ha/sh/obHash003.txt",
      },
      {
        "storage": "swarm",
        "url": "https://gateway.ethswarm.org/access/bzz://some-hash-for-blobHash003",
      },
    ],
    "index": 0,
    "proof": "proof003",
    "size": 1200,
    "transaction": {
      "category": "other",
    },
    "txHash": "txHash009",
    "txIndex": 2,
    "versionedHash": "blobHash003",
  },
  {
    "blockHash": "blockHash004",
    "blockNumber": 1004,
    "blockTimestamp": "2023-08-20T12:00:00.000Z",
    "commitment": "commitment002",
    "dataStorageReferences": [
      {
        "storage": "google",
        "url": "https://storage.googleapis.com/blobscan-test-bucket/70118930558/ob/Ha/sh/obHash002.txt",
      },
    ],
    "index": 0,
    "proof": "proof002",
    "size": 1100,
    "transaction": {
      "category": "rollup",
      "rollup": "arbitrum",
    },
    "txHash": "txHash008",
    "txIndex": 1,
    "versionedHash": "blobHash002",
  },
  {
    "blockHash": "blockHash004",
    "blockNumber": 1004,
    "blockTimestamp": "2023-08-20T12:00:00.000Z",
    "commitment": "commitment001",
    "dataStorageReferences": [
      {
        "storage": "google",
        "url": "https://storage.googleapis.com/blobscan-test-bucket/70118930558/ob/Ha/sh/obHash001.txt",
      },
      {
        "storage": "swarm",
        "url": "https://gateway.ethswarm.org/access/bzz://some-hash-for-blobHash001",
      },
    ],
    "index": 0,
    "proof": "proof001",
    "size": 1000,
    "transaction": {
      "category": "rollup",
      "rollup": "optimism",
    },
    "txHash": "txHash007",
    "txIndex": 0,
    "versionedHash": "blobHash001",
  },
]
`;

exports[`Blob router > getAll > when getting filtered blob results > should return the results corresponding to the date range specified 1`] = `
[
  {
    "blockHash": "blockHash004",
    "blockNumber": 1004,
    "blockTimestamp": "2023-08-20T12:00:00.000Z",
    "commitment": "commitment005",
    "dataStorageReferences": [
      {
        "storage": "postgres",
        "url": "http://localhost:3001/blobs/blobHash005/data",
      },
    ],
    "index": 0,
    "proof": "proof005",
    "size": 1400,
    "transaction": {
      "category": "rollup",
      "rollup": "base",
    },
    "txHash": "txHash011",
    "txIndex": 4,
    "versionedHash": "blobHash005",
  },
  {
    "blockHash": "blockHash004",
    "blockNumber": 1004,
    "blockTimestamp": "2023-08-20T12:00:00.000Z",
    "commitment": "commitment003",
    "dataStorageReferences": [
      {
        "storage": "google",
        "url": "https://storage.googleapis.com/blobscan-test-bucket/70118930558/ob/Ha/sh/obHash003.txt",
      },
      {
        "storage": "swarm",
        "url": "https://gateway.ethswarm.org/access/bzz://some-hash-for-blobHash003",
      },
    ],
    "index": 0,
    "proof": "proof003",
    "size": 1200,
    "transaction": {
      "category": "other",
    },
    "txHash": "txHash010",
    "txIndex": 3,
    "versionedHash": "blobHash003",
  },
  {
    "blockHash": "blockHash004",
    "blockNumber": 1004,
    "blockTimestamp": "2023-08-20T12:00:00.000Z",
    "commitment": "commitment003",
    "dataStorageReferences": [
      {
        "storage": "google",
        "url": "https://storage.googleapis.com/blobscan-test-bucket/70118930558/ob/Ha/sh/obHash003.txt",
      },
      {
        "storage": "swarm",
        "url": "https://gateway.ethswarm.org/access/bzz://some-hash-for-blobHash003",
      },
    ],
    "index": 0,
    "proof": "proof003",
    "size": 1200,
    "transaction": {
      "category": "other",
    },
    "txHash": "txHash009",
    "txIndex": 2,
    "versionedHash": "blobHash003",
  },
  {
    "blockHash": "blockHash004",
    "blockNumber": 1004,
    "blockTimestamp": "2023-08-20T12:00:00.000Z",
    "commitment": "commitment002",
    "dataStorageReferences": [
      {
        "storage": "google",
        "url": "https://storage.googleapis.com/blobscan-test-bucket/70118930558/ob/Ha/sh/obHash002.txt",
      },
    ],
    "index": 0,
    "proof": "proof002",
    "size": 1100,
    "transaction": {
      "category": "rollup",
      "rollup": "arbitrum",
    },
    "txHash": "txHash008",
    "txIndex": 1,
    "versionedHash": "blobHash002",
  },
  {
    "blockHash": "blockHash004",
    "blockNumber": 1004,
    "blockTimestamp": "2023-08-20T12:00:00.000Z",
    "commitment": "commitment001",
    "dataStorageReferences": [
      {
        "storage": "google",
        "url": "https://storage.googleapis.com/blobscan-test-bucket/70118930558/ob/Ha/sh/obHash001.txt",
      },
      {
        "storage": "swarm",
        "url": "https://gateway.ethswarm.org/access/bzz://some-hash-for-blobHash001",
      },
    ],
    "index": 0,
    "proof": "proof001",
    "size": 1000,
    "transaction": {
      "category": "rollup",
      "rollup": "optimism",
    },
    "txHash": "txHash007",
    "txIndex": 0,
    "versionedHash": "blobHash001",
  },
  {
    "blockHash": "blockHash003",
    "blockNumber": 1003,
    "blockTimestamp": "2023-08-03T12:00:00.000Z",
    "commitment": "commitment001",
    "dataStorageReferences": [
      {
        "storage": "google",
        "url": "https://storage.googleapis.com/blobscan-test-bucket/70118930558/ob/Ha/sh/obHash001.txt",
      },
      {
        "storage": "swarm",
        "url": "https://gateway.ethswarm.org/access/bzz://some-hash-for-blobHash001",
      },
    ],
    "index": 2,
    "proof": "proof001",
    "size": 1000,
    "transaction": {
      "category": "other",
    },
    "txHash": "txHash006",
    "txIndex": 1,
    "versionedHash": "blobHash001",
  },
  {
    "blockHash": "blockHash003",
    "blockNumber": 1003,
    "blockTimestamp": "2023-08-03T12:00:00.000Z",
    "commitment": "commitment001",
    "dataStorageReferences": [
      {
        "storage": "google",
        "url": "https://storage.googleapis.com/blobscan-test-bucket/70118930558/ob/Ha/sh/obHash001.txt",
      },
      {
        "storage": "swarm",
        "url": "https://gateway.ethswarm.org/access/bzz://some-hash-for-blobHash001",
      },
    ],
    "index": 1,
    "proof": "proof001",
    "size": 1000,
    "transaction": {
      "category": "other",
    },
    "txHash": "txHash006",
    "txIndex": 1,
    "versionedHash": "blobHash001",
  },
  {
    "blockHash": "blockHash003",
    "blockNumber": 1003,
    "blockTimestamp": "2023-08-03T12:00:00.000Z",
    "commitment": "commitment001",
    "dataStorageReferences": [
      {
        "storage": "google",
        "url": "https://storage.googleapis.com/blobscan-test-bucket/70118930558/ob/Ha/sh/obHash001.txt",
      },
      {
        "storage": "swarm",
        "url": "https://gateway.ethswarm.org/access/bzz://some-hash-for-blobHash001",
      },
    ],
    "index": 0,
    "proof": "proof001",
    "size": 1000,
    "transaction": {
      "category": "other",
    },
    "txHash": "txHash006",
    "txIndex": 1,
    "versionedHash": "blobHash001",
  },
  {
    "blockHash": "blockHash003",
    "blockNumber": 1003,
    "blockTimestamp": "2023-08-03T12:00:00.000Z",
    "commitment": "commitment001",
    "dataStorageReferences": [
      {
        "storage": "google",
        "url": "https://storage.googleapis.com/blobscan-test-bucket/70118930558/ob/Ha/sh/obHash001.txt",
      },
      {
        "storage": "swarm",
        "url": "https://gateway.ethswarm.org/access/bzz://some-hash-for-blobHash001",
      },
    ],
    "index": 2,
    "proof": "proof001",
    "size": 1000,
    "transaction": {
      "category": "other",
    },
    "txHash": "txHash005",
    "txIndex": 0,
    "versionedHash": "blobHash001",
  },
  {
    "blockHash": "blockHash003",
    "blockNumber": 1003,
    "blockTimestamp": "2023-08-03T12:00:00.000Z",
    "commitment": "commitment002",
    "dataStorageReferences": [
      {
        "storage": "google",
        "url": "https://storage.googleapis.com/blobscan-test-bucket/70118930558/ob/Ha/sh/obHash002.txt",
      },
    ],
    "index": 1,
    "proof": "proof002",
    "size": 1100,
    "transaction": {
      "category": "other",
    },
    "txHash": "txHash005",
    "txIndex": 0,
    "versionedHash": "blobHash002",
  },
  {
    "blockHash": "blockHash003",
    "blockNumber": 1003,
    "blockTimestamp": "2023-08-03T12:00:00.000Z",
    "commitment": "commitment002",
    "dataStorageReferences": [
      {
        "storage": "google",
        "url": "https://storage.googleapis.com/blobscan-test-bucket/70118930558/ob/Ha/sh/obHash002.txt",
      },
    ],
    "index": 0,
    "proof": "proof002",
    "size": 1100,
    "transaction": {
      "category": "other",
    },
    "txHash": "txHash005",
    "txIndex": 0,
    "versionedHash": "blobHash002",
  },
]
`;

exports[`Blob router > getAll > when getting filtered blob results > should return the results corresponding to the receiver address specified 1`] = `
[
  {
    "blockHash": "blockHash004",
    "blockNumber": 1004,
    "blockTimestamp": "2023-08-20T12:00:00.000Z",
    "commitment": "commitment001",
    "dataStorageReferences": [
      {
        "storage": "google",
        "url": "https://storage.googleapis.com/blobscan-test-bucket/70118930558/ob/Ha/sh/obHash001.txt",
      },
      {
        "storage": "swarm",
        "url": "https://gateway.ethswarm.org/access/bzz://some-hash-for-blobHash001",
      },
    ],
    "index": 0,
    "proof": "proof001",
    "size": 1000,
    "transaction": {
      "category": "rollup",
      "rollup": "optimism",
    },
    "txHash": "txHash007",
    "txIndex": 0,
    "versionedHash": "blobHash001",
  },
  {
    "blockHash": "blockHash001",
    "blockNumber": 1001,
    "blockTimestamp": "2022-10-16T12:00:00.000Z",
    "commitment": "commitment003",
    "dataStorageReferences": [
      {
        "storage": "google",
        "url": "https://storage.googleapis.com/blobscan-test-bucket/70118930558/ob/Ha/sh/obHash003.txt",
      },
      {
        "storage": "swarm",
        "url": "https://gateway.ethswarm.org/access/bzz://some-hash-for-blobHash003",
      },
    ],
    "index": 2,
    "proof": "proof003",
    "size": 1200,
    "transaction": {
      "category": "other",
    },
    "txHash": "txHash001",
    "txIndex": 0,
    "versionedHash": "blobHash003",
  },
  {
    "blockHash": "blockHash001",
    "blockNumber": 1001,
    "blockTimestamp": "2022-10-16T12:00:00.000Z",
    "commitment": "commitment002",
    "dataStorageReferences": [
      {
        "storage": "google",
        "url": "https://storage.googleapis.com/blobscan-test-bucket/70118930558/ob/Ha/sh/obHash002.txt",
      },
    ],
    "index": 1,
    "proof": "proof002",
    "size": 1100,
    "transaction": {
      "category": "other",
    },
    "txHash": "txHash001",
    "txIndex": 0,
    "versionedHash": "blobHash002",
  },
  {
    "blockHash": "blockHash001",
    "blockNumber": 1001,
    "blockTimestamp": "2022-10-16T12:00:00.000Z",
    "commitment": "commitment001",
    "dataStorageReferences": [
      {
        "storage": "google",
        "url": "https://storage.googleapis.com/blobscan-test-bucket/70118930558/ob/Ha/sh/obHash001.txt",
      },
      {
        "storage": "swarm",
        "url": "https://gateway.ethswarm.org/access/bzz://some-hash-for-blobHash001",
      },
    ],
    "index": 0,
    "proof": "proof001",
    "size": 1000,
    "transaction": {
      "category": "other",
    },
    "txHash": "txHash001",
    "txIndex": 0,
    "versionedHash": "blobHash001",
  },
]
`;

exports[`Blob router > getAll > when getting filtered blob results > should return the results corresponding to the sender address specified 1`] = `
[
  {
    "blockHash": "blockHash001",
    "blockNumber": 1001,
    "blockTimestamp": "2022-10-16T12:00:00.000Z",
    "commitment": "commitment003",
    "dataStorageReferences": [
      {
        "storage": "google",
        "url": "https://storage.googleapis.com/blobscan-test-bucket/70118930558/ob/Ha/sh/obHash003.txt",
      },
      {
        "storage": "swarm",
        "url": "https://gateway.ethswarm.org/access/bzz://some-hash-for-blobHash003",
      },
    ],
    "index": 2,
    "proof": "proof003",
    "size": 1200,
    "transaction": {
      "category": "other",
    },
    "txHash": "txHash001",
    "txIndex": 0,
    "versionedHash": "blobHash003",
  },
  {
    "blockHash": "blockHash001",
    "blockNumber": 1001,
    "blockTimestamp": "2022-10-16T12:00:00.000Z",
    "commitment": "commitment002",
    "dataStorageReferences": [
      {
        "storage": "google",
        "url": "https://storage.googleapis.com/blobscan-test-bucket/70118930558/ob/Ha/sh/obHash002.txt",
      },
    ],
    "index": 1,
    "proof": "proof002",
    "size": 1100,
    "transaction": {
      "category": "other",
    },
    "txHash": "txHash001",
    "txIndex": 0,
    "versionedHash": "blobHash002",
  },
  {
    "blockHash": "blockHash001",
    "blockNumber": 1001,
    "blockTimestamp": "2022-10-16T12:00:00.000Z",
    "commitment": "commitment001",
    "dataStorageReferences": [
      {
        "storage": "google",
        "url": "https://storage.googleapis.com/blobscan-test-bucket/70118930558/ob/Ha/sh/obHash001.txt",
      },
      {
        "storage": "swarm",
        "url": "https://gateway.ethswarm.org/access/bzz://some-hash-for-blobHash001",
      },
    ],
    "index": 0,
    "proof": "proof001",
    "size": 1000,
    "transaction": {
      "category": "other",
    },
    "txHash": "txHash001",
    "txIndex": 0,
    "versionedHash": "blobHash001",
  },
]
`;

exports[`Blob router > getAll > when getting filtered blob results > should return the results corresponding to the sender and receiver addresses specified 1`] = `
[
  {
    "blockHash": "blockHash004",
    "blockNumber": 1004,
    "blockTimestamp": "2023-08-20T12:00:00.000Z",
    "commitment": "commitment001",
    "dataStorageReferences": [
      {
        "storage": "google",
        "url": "https://storage.googleapis.com/blobscan-test-bucket/70118930558/ob/Ha/sh/obHash001.txt",
      },
      {
        "storage": "swarm",
        "url": "https://gateway.ethswarm.org/access/bzz://some-hash-for-blobHash001",
      },
    ],
    "index": 0,
    "proof": "proof001",
    "size": 1000,
    "transaction": {
      "category": "rollup",
      "rollup": "optimism",
    },
    "txHash": "txHash007",
    "txIndex": 0,
    "versionedHash": "blobHash001",
  },
  {
    "blockHash": "blockHash001",
    "blockNumber": 1001,
    "blockTimestamp": "2022-10-16T12:00:00.000Z",
    "commitment": "commitment003",
    "dataStorageReferences": [
      {
        "storage": "google",
        "url": "https://storage.googleapis.com/blobscan-test-bucket/70118930558/ob/Ha/sh/obHash003.txt",
      },
      {
        "storage": "swarm",
        "url": "https://gateway.ethswarm.org/access/bzz://some-hash-for-blobHash003",
      },
    ],
    "index": 2,
    "proof": "proof003",
    "size": 1200,
    "transaction": {
      "category": "other",
    },
    "txHash": "txHash001",
    "txIndex": 0,
    "versionedHash": "blobHash003",
  },
  {
    "blockHash": "blockHash001",
    "blockNumber": 1001,
    "blockTimestamp": "2022-10-16T12:00:00.000Z",
    "commitment": "commitment002",
    "dataStorageReferences": [
      {
        "storage": "google",
        "url": "https://storage.googleapis.com/blobscan-test-bucket/70118930558/ob/Ha/sh/obHash002.txt",
      },
    ],
    "index": 1,
    "proof": "proof002",
    "size": 1100,
    "transaction": {
      "category": "other",
    },
    "txHash": "txHash001",
    "txIndex": 0,
    "versionedHash": "blobHash002",
  },
  {
    "blockHash": "blockHash001",
    "blockNumber": 1001,
    "blockTimestamp": "2022-10-16T12:00:00.000Z",
    "commitment": "commitment001",
    "dataStorageReferences": [
      {
        "storage": "google",
        "url": "https://storage.googleapis.com/blobscan-test-bucket/70118930558/ob/Ha/sh/obHash001.txt",
      },
      {
        "storage": "swarm",
        "url": "https://gateway.ethswarm.org/access/bzz://some-hash-for-blobHash001",
      },
    ],
    "index": 0,
    "proof": "proof001",
    "size": 1000,
    "transaction": {
      "category": "other",
    },
    "txHash": "txHash001",
    "txIndex": 0,
    "versionedHash": "blobHash001",
  },
]
`;

exports[`Blob router > getAll > when getting filtered blob results > should return the results ending at the block specified without including it 1`] = `
[
  {
    "blockHash": "blockHash002",
    "blockNumber": 1002,
    "blockTimestamp": "2023-05-10T12:00:00.000Z",
    "commitment": "0x0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000b3",
    "dataStorageReferences": [
      {
        "storage": "postgres",
        "url": "http://localhost:3001/blobs/0x000000000000000000000000000000000000000000000000000000000000b3/data",
      },
    ],
    "index": 2,
    "proof": "0x000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000ab3",
    "size": 131072,
    "transaction": {
      "category": "rollup",
      "rollup": "base",
    },
    "txHash": "txHash004",
    "txIndex": 0,
    "versionedHash": "0x000000000000000000000000000000000000000000000000000000000000b3",
  },
  {
    "blockHash": "blockHash002",
    "blockNumber": 1002,
    "blockTimestamp": "2023-05-10T12:00:00.000Z",
    "commitment": "0x0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000b2",
    "dataStorageReferences": [
      {
        "storage": "postgres",
        "url": "http://localhost:3001/blobs/0x000000000000000000000000000000000000000000000000000000000000b2/data",
      },
    ],
    "index": 1,
    "proof": "0x000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000ab2",
    "size": 131072,
    "transaction": {
      "category": "rollup",
      "rollup": "base",
    },
    "txHash": "txHash004",
    "txIndex": 0,
    "versionedHash": "0x000000000000000000000000000000000000000000000000000000000000b2",
  },
  {
    "blockHash": "blockHash002",
    "blockNumber": 1002,
    "blockTimestamp": "2023-05-10T12:00:00.000Z",
    "commitment": "0x0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000b1",
    "dataStorageReferences": [
      {
        "storage": "postgres",
        "url": "http://localhost:3001/blobs/0x000000000000000000000000000000000000000000000000000000000000b1/data",
      },
    ],
    "index": 0,
    "proof": "0x000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000ab1",
    "size": 131072,
    "transaction": {
      "category": "rollup",
      "rollup": "base",
    },
    "txHash": "txHash004",
    "txIndex": 0,
    "versionedHash": "0x000000000000000000000000000000000000000000000000000000000000b1",
  },
  {
    "blockHash": "blockHash001",
    "blockNumber": 1001,
    "blockTimestamp": "2022-10-16T12:00:00.000Z",
    "commitment": "commitment002",
    "dataStorageReferences": [
      {
        "storage": "google",
        "url": "https://storage.googleapis.com/blobscan-test-bucket/70118930558/ob/Ha/sh/obHash002.txt",
      },
    ],
    "index": 1,
    "proof": "proof002",
    "size": 1100,
    "transaction": {
      "category": "rollup",
      "rollup": "optimism",
    },
    "txHash": "txHash003",
    "txIndex": 2,
    "versionedHash": "blobHash002",
  },
  {
    "blockHash": "blockHash001",
    "blockNumber": 1001,
    "blockTimestamp": "2022-10-16T12:00:00.000Z",
    "commitment": "commitment001",
    "dataStorageReferences": [
      {
        "storage": "google",
        "url": "https://storage.googleapis.com/blobscan-test-bucket/70118930558/ob/Ha/sh/obHash001.txt",
      },
      {
        "storage": "swarm",
        "url": "https://gateway.ethswarm.org/access/bzz://some-hash-for-blobHash001",
      },
    ],
    "index": 0,
    "proof": "proof001",
    "size": 1000,
    "transaction": {
      "category": "rollup",
      "rollup": "optimism",
    },
    "txHash": "txHash003",
    "txIndex": 2,
    "versionedHash": "blobHash001",
  },
  {
    "blockHash": "blockHash001",
    "blockNumber": 1001,
    "blockTimestamp": "2022-10-16T12:00:00.000Z",
    "commitment": "commitment001",
    "dataStorageReferences": [
      {
        "storage": "google",
        "url": "https://storage.googleapis.com/blobscan-test-bucket/70118930558/ob/Ha/sh/obHash001.txt",
      },
      {
        "storage": "swarm",
        "url": "https://gateway.ethswarm.org/access/bzz://some-hash-for-blobHash001",
      },
    ],
    "index": 0,
    "proof": "proof001",
    "size": 1000,
    "transaction": {
      "category": "other",
    },
    "txHash": "txHash002",
    "txIndex": 1,
    "versionedHash": "blobHash001",
  },
  {
    "blockHash": "blockHash001",
    "blockNumber": 1001,
    "blockTimestamp": "2022-10-16T12:00:00.000Z",
    "commitment": "commitment003",
    "dataStorageReferences": [
      {
        "storage": "google",
        "url": "https://storage.googleapis.com/blobscan-test-bucket/70118930558/ob/Ha/sh/obHash003.txt",
      },
      {
        "storage": "swarm",
        "url": "https://gateway.ethswarm.org/access/bzz://some-hash-for-blobHash003",
      },
    ],
    "index": 2,
    "proof": "proof003",
    "size": 1200,
    "transaction": {
      "category": "other",
    },
    "txHash": "txHash001",
    "txIndex": 0,
    "versionedHash": "blobHash003",
  },
  {
    "blockHash": "blockHash001",
    "blockNumber": 1001,
    "blockTimestamp": "2022-10-16T12:00:00.000Z",
    "commitment": "commitment002",
    "dataStorageReferences": [
      {
        "storage": "google",
        "url": "https://storage.googleapis.com/blobscan-test-bucket/70118930558/ob/Ha/sh/obHash002.txt",
      },
    ],
    "index": 1,
    "proof": "proof002",
    "size": 1100,
    "transaction": {
      "category": "other",
    },
    "txHash": "txHash001",
    "txIndex": 0,
    "versionedHash": "blobHash002",
  },
  {
    "blockHash": "blockHash001",
    "blockNumber": 1001,
    "blockTimestamp": "2022-10-16T12:00:00.000Z",
    "commitment": "commitment001",
    "dataStorageReferences": [
      {
        "storage": "google",
        "url": "https://storage.googleapis.com/blobscan-test-bucket/70118930558/ob/Ha/sh/obHash001.txt",
      },
      {
        "storage": "swarm",
        "url": "https://gateway.ethswarm.org/access/bzz://some-hash-for-blobHash001",
      },
    ],
    "index": 0,
    "proof": "proof001",
    "size": 1000,
    "transaction": {
      "category": "other",
    },
    "txHash": "txHash001",
    "txIndex": 0,
    "versionedHash": "blobHash001",
  },
]
`;

exports[`Blob router > getAll > when getting filtered blob results > should return the results ending at the date specified without including it 1`] = `
[
  {
    "blockHash": "blockHash001",
    "blockNumber": 1001,
    "blockTimestamp": "2022-10-16T12:00:00.000Z",
    "commitment": "commitment002",
    "dataStorageReferences": [
      {
        "storage": "google",
        "url": "https://storage.googleapis.com/blobscan-test-bucket/70118930558/ob/Ha/sh/obHash002.txt",
      },
    ],
    "index": 1,
    "proof": "proof002",
    "size": 1100,
    "transaction": {
      "category": "rollup",
      "rollup": "optimism",
    },
    "txHash": "txHash003",
    "txIndex": 2,
    "versionedHash": "blobHash002",
  },
  {
    "blockHash": "blockHash001",
    "blockNumber": 1001,
    "blockTimestamp": "2022-10-16T12:00:00.000Z",
    "commitment": "commitment001",
    "dataStorageReferences": [
      {
        "storage": "google",
        "url": "https://storage.googleapis.com/blobscan-test-bucket/70118930558/ob/Ha/sh/obHash001.txt",
      },
      {
        "storage": "swarm",
        "url": "https://gateway.ethswarm.org/access/bzz://some-hash-for-blobHash001",
      },
    ],
    "index": 0,
    "proof": "proof001",
    "size": 1000,
    "transaction": {
      "category": "rollup",
      "rollup": "optimism",
    },
    "txHash": "txHash003",
    "txIndex": 2,
    "versionedHash": "blobHash001",
  },
  {
    "blockHash": "blockHash001",
    "blockNumber": 1001,
    "blockTimestamp": "2022-10-16T12:00:00.000Z",
    "commitment": "commitment001",
    "dataStorageReferences": [
      {
        "storage": "google",
        "url": "https://storage.googleapis.com/blobscan-test-bucket/70118930558/ob/Ha/sh/obHash001.txt",
      },
      {
        "storage": "swarm",
        "url": "https://gateway.ethswarm.org/access/bzz://some-hash-for-blobHash001",
      },
    ],
    "index": 0,
    "proof": "proof001",
    "size": 1000,
    "transaction": {
      "category": "other",
    },
    "txHash": "txHash002",
    "txIndex": 1,
    "versionedHash": "blobHash001",
  },
  {
    "blockHash": "blockHash001",
    "blockNumber": 1001,
    "blockTimestamp": "2022-10-16T12:00:00.000Z",
    "commitment": "commitment003",
    "dataStorageReferences": [
      {
        "storage": "google",
        "url": "https://storage.googleapis.com/blobscan-test-bucket/70118930558/ob/Ha/sh/obHash003.txt",
      },
      {
        "storage": "swarm",
        "url": "https://gateway.ethswarm.org/access/bzz://some-hash-for-blobHash003",
      },
    ],
    "index": 2,
    "proof": "proof003",
    "size": 1200,
    "transaction": {
      "category": "other",
    },
    "txHash": "txHash001",
    "txIndex": 0,
    "versionedHash": "blobHash003",
  },
  {
    "blockHash": "blockHash001",
    "blockNumber": 1001,
    "blockTimestamp": "2022-10-16T12:00:00.000Z",
    "commitment": "commitment002",
    "dataStorageReferences": [
      {
        "storage": "google",
        "url": "https://storage.googleapis.com/blobscan-test-bucket/70118930558/ob/Ha/sh/obHash002.txt",
      },
    ],
    "index": 1,
    "proof": "proof002",
    "size": 1100,
    "transaction": {
      "category": "other",
    },
    "txHash": "txHash001",
    "txIndex": 0,
    "versionedHash": "blobHash002",
  },
  {
    "blockHash": "blockHash001",
    "blockNumber": 1001,
    "blockTimestamp": "2022-10-16T12:00:00.000Z",
    "commitment": "commitment001",
    "dataStorageReferences": [
      {
        "storage": "google",
        "url": "https://storage.googleapis.com/blobscan-test-bucket/70118930558/ob/Ha/sh/obHash001.txt",
      },
      {
        "storage": "swarm",
        "url": "https://gateway.ethswarm.org/access/bzz://some-hash-for-blobHash001",
      },
    ],
    "index": 0,
    "proof": "proof001",
    "size": 1000,
    "transaction": {
      "category": "other",
    },
    "txHash": "txHash001",
    "txIndex": 0,
    "versionedHash": "blobHash001",
  },
]
`;

exports[`Blob router > getAll > when getting filtered blob results > should return the results starting from the block specified 1`] = `
[
  {
    "blockHash": "0x8000000000000000000000000000000000000000000000000000000000000000",
    "blockNumber": 1008,
    "blockTimestamp": "2023-08-31T16:00:00.000Z",
    "commitment": "0xb10000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000",
    "dataStorageReferences": [],
    "index": 0,
    "proof": "b10000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000",
    "size": 1500,
    "transaction": {
      "category": "other",
    },
    "txHash": "txHash016",
    "txIndex": 0,
    "versionedHash": "0xb100000000000000000000000000000000000000000000000000000000000000",
  },
  {
    "blockHash": "0x7000000000000000000000000000000000000000000000000000000000000000",
    "blockNumber": 1007,
    "blockTimestamp": "2023-08-31T14:00:00.000Z",
    "commitment": "commitment004",
    "dataStorageReferences": [
      {
        "storage": "google",
        "url": "https://storage.googleapis.com/blobscan-test-bucket/70118930558/ob/Ha/sh/obHash004.txt",
      },
      {
        "storage": "postgres",
        "url": "http://localhost:3001/blobs/blobHash004/data",
      },
    ],
    "index": 2,
    "proof": "proof004",
    "size": 1300,
    "transaction": {
      "category": "rollup",
      "rollup": "optimism",
    },
    "txHash": "txHash015",
    "txIndex": 0,
    "versionedHash": "blobHash004",
  },
  {
    "blockHash": "0x7000000000000000000000000000000000000000000000000000000000000000",
    "blockNumber": 1007,
    "blockTimestamp": "2023-08-31T14:00:00.000Z",
    "commitment": "commitment004",
    "dataStorageReferences": [
      {
        "storage": "google",
        "url": "https://storage.googleapis.com/blobscan-test-bucket/70118930558/ob/Ha/sh/obHash004.txt",
      },
      {
        "storage": "postgres",
        "url": "http://localhost:3001/blobs/blobHash004/data",
      },
    ],
    "index": 1,
    "proof": "proof004",
    "size": 1300,
    "transaction": {
      "category": "rollup",
      "rollup": "optimism",
    },
    "txHash": "txHash015",
    "txIndex": 0,
    "versionedHash": "blobHash004",
  },
  {
    "blockHash": "0x7000000000000000000000000000000000000000000000000000000000000000",
    "blockNumber": 1007,
    "blockTimestamp": "2023-08-31T14:00:00.000Z",
    "commitment": "commitment004",
    "dataStorageReferences": [
      {
        "storage": "google",
        "url": "https://storage.googleapis.com/blobscan-test-bucket/70118930558/ob/Ha/sh/obHash004.txt",
      },
      {
        "storage": "postgres",
        "url": "http://localhost:3001/blobs/blobHash004/data",
      },
    ],
    "index": 0,
    "proof": "proof004",
    "size": 1300,
    "transaction": {
      "category": "rollup",
      "rollup": "optimism",
    },
    "txHash": "txHash015",
    "txIndex": 0,
    "versionedHash": "blobHash004",
  },
]
`;

exports[`Blob router > getAll > when getting filtered blob results > should return the results starting from the date specified 1`] = `
[
  {
    "blockHash": "0x8000000000000000000000000000000000000000000000000000000000000000",
    "blockNumber": 1008,
    "blockTimestamp": "2023-08-31T16:00:00.000Z",
    "commitment": "0xb10000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000",
    "dataStorageReferences": [],
    "index": 0,
    "proof": "b10000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000",
    "size": 1500,
    "transaction": {
      "category": "other",
    },
    "txHash": "txHash016",
    "txIndex": 0,
    "versionedHash": "0xb100000000000000000000000000000000000000000000000000000000000000",
  },
  {
    "blockHash": "0x7000000000000000000000000000000000000000000000000000000000000000",
    "blockNumber": 1007,
    "blockTimestamp": "2023-08-31T14:00:00.000Z",
    "commitment": "commitment004",
    "dataStorageReferences": [
      {
        "storage": "google",
        "url": "https://storage.googleapis.com/blobscan-test-bucket/70118930558/ob/Ha/sh/obHash004.txt",
      },
      {
        "storage": "postgres",
        "url": "http://localhost:3001/blobs/blobHash004/data",
      },
    ],
    "index": 2,
    "proof": "proof004",
    "size": 1300,
    "transaction": {
      "category": "rollup",
      "rollup": "optimism",
    },
    "txHash": "txHash015",
    "txIndex": 0,
    "versionedHash": "blobHash004",
  },
  {
    "blockHash": "0x7000000000000000000000000000000000000000000000000000000000000000",
    "blockNumber": 1007,
    "blockTimestamp": "2023-08-31T14:00:00.000Z",
    "commitment": "commitment004",
    "dataStorageReferences": [
      {
        "storage": "google",
        "url": "https://storage.googleapis.com/blobscan-test-bucket/70118930558/ob/Ha/sh/obHash004.txt",
      },
      {
        "storage": "postgres",
        "url": "http://localhost:3001/blobs/blobHash004/data",
      },
    ],
    "index": 1,
    "proof": "proof004",
    "size": 1300,
    "transaction": {
      "category": "rollup",
      "rollup": "optimism",
    },
    "txHash": "txHash015",
    "txIndex": 0,
    "versionedHash": "blobHash004",
  },
  {
    "blockHash": "0x7000000000000000000000000000000000000000000000000000000000000000",
    "blockNumber": 1007,
    "blockTimestamp": "2023-08-31T14:00:00.000Z",
    "commitment": "commitment004",
    "dataStorageReferences": [
      {
        "storage": "google",
        "url": "https://storage.googleapis.com/blobscan-test-bucket/70118930558/ob/Ha/sh/obHash004.txt",
      },
      {
        "storage": "postgres",
        "url": "http://localhost:3001/blobs/blobHash004/data",
      },
    ],
    "index": 0,
    "proof": "proof004",
    "size": 1300,
    "transaction": {
      "category": "rollup",
      "rollup": "optimism",
    },
    "txHash": "txHash015",
    "txIndex": 0,
    "versionedHash": "blobHash004",
  },
  {
    "blockHash": "blockHash006",
    "blockNumber": 1006,
    "blockTimestamp": "2023-08-31T12:00:00.000Z",
    "commitment": "0xb4f67eb0771fbbf1b06b88ce0e23383daf994320508d44dd30dbd507f598c0d9b3da5a152e41a0428375060c3803b983",
    "dataStorageReferences": [
      {
        "storage": "postgres",
        "url": "http://localhost:3001/blobs/0x010001c79d78a76fb9b4bab3896ee3ea32f3e2607da7801eb1a92da39d6c1368/data",
      },
      {
        "storage": "swarm",
        "url": "https://gateway.ethswarm.org/access/bzz://some-hash-for-blobHash006",
      },
    ],
    "index": 0,
    "proof": "89cf91c4c8be6f2a390d4262425f79dffb74c174fb15a210182184543bf7394e5a7970a774ee8e0dabc315424c22df0f",
    "size": 1500,
    "transaction": {
      "category": "other",
    },
    "txHash": "0x5be77167b05f39ea8950f11b0da2bdfec6e04055030068b051ac5a43aaf251e9",
    "txIndex": 0,
    "versionedHash": "0x010001c79d78a76fb9b4bab3896ee3ea32f3e2607da7801eb1a92da39d6c1368",
  },
]
`;

exports[`Blob router > getAll > when getting filtered blob results > should return the results starting from the slot specified 1`] = `
[
  {
    "blockHash": "0x8000000000000000000000000000000000000000000000000000000000000000",
    "blockNumber": 1008,
    "blockTimestamp": "2023-08-31T16:00:00.000Z",
    "commitment": "0xb10000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000",
    "dataStorageReferences": [],
    "index": 0,
    "proof": "b10000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000",
    "size": 1500,
    "transaction": {
      "category": "other",
    },
    "txHash": "txHash016",
    "txIndex": 0,
    "versionedHash": "0xb100000000000000000000000000000000000000000000000000000000000000",
  },
  {
    "blockHash": "0x7000000000000000000000000000000000000000000000000000000000000000",
    "blockNumber": 1007,
    "blockTimestamp": "2023-08-31T14:00:00.000Z",
    "commitment": "commitment004",
    "dataStorageReferences": [
      {
        "storage": "google",
        "url": "https://storage.googleapis.com/blobscan-test-bucket/70118930558/ob/Ha/sh/obHash004.txt",
      },
      {
        "storage": "postgres",
        "url": "http://localhost:3001/blobs/blobHash004/data",
      },
    ],
    "index": 2,
    "proof": "proof004",
    "size": 1300,
    "transaction": {
      "category": "rollup",
      "rollup": "optimism",
    },
    "txHash": "txHash015",
    "txIndex": 0,
    "versionedHash": "blobHash004",
  },
  {
    "blockHash": "0x7000000000000000000000000000000000000000000000000000000000000000",
    "blockNumber": 1007,
    "blockTimestamp": "2023-08-31T14:00:00.000Z",
    "commitment": "commitment004",
    "dataStorageReferences": [
      {
        "storage": "google",
        "url": "https://storage.googleapis.com/blobscan-test-bucket/70118930558/ob/Ha/sh/obHash004.txt",
      },
      {
        "storage": "postgres",
        "url": "http://localhost:3001/blobs/blobHash004/data",
      },
    ],
    "index": 1,
    "proof": "proof004",
    "size": 1300,
    "transaction": {
      "category": "rollup",
      "rollup": "optimism",
    },
    "txHash": "txHash015",
    "txIndex": 0,
    "versionedHash": "blobHash004",
  },
  {
    "blockHash": "0x7000000000000000000000000000000000000000000000000000000000000000",
    "blockNumber": 1007,
    "blockTimestamp": "2023-08-31T14:00:00.000Z",
    "commitment": "commitment004",
    "dataStorageReferences": [
      {
        "storage": "google",
        "url": "https://storage.googleapis.com/blobscan-test-bucket/70118930558/ob/Ha/sh/obHash004.txt",
      },
      {
        "storage": "postgres",
        "url": "http://localhost:3001/blobs/blobHash004/data",
      },
    ],
    "index": 0,
    "proof": "proof004",
    "size": 1300,
    "transaction": {
      "category": "rollup",
      "rollup": "optimism",
    },
    "txHash": "txHash015",
    "txIndex": 0,
    "versionedHash": "blobHash004",
  },
]
`;

exports[`Blob router > getAll > when getting paginated blob results > should default to the first page when no page was specified 1`] = `
[
  {
    "blockHash": "0x8000000000000000000000000000000000000000000000000000000000000000",
    "blockNumber": 1008,
    "blockTimestamp": "2023-08-31T16:00:00.000Z",
    "commitment": "0xb10000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000",
    "dataStorageReferences": [],
    "index": 0,
    "proof": "b10000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000",
    "size": 1500,
    "transaction": {
      "category": "other",
    },
    "txHash": "txHash016",
    "txIndex": 0,
    "versionedHash": "0xb100000000000000000000000000000000000000000000000000000000000000",
  },
  {
    "blockHash": "0x7000000000000000000000000000000000000000000000000000000000000000",
    "blockNumber": 1007,
    "blockTimestamp": "2023-08-31T14:00:00.000Z",
    "commitment": "commitment004",
    "dataStorageReferences": [
      {
        "storage": "google",
        "url": "https://storage.googleapis.com/blobscan-test-bucket/70118930558/ob/Ha/sh/obHash004.txt",
      },
      {
        "storage": "postgres",
        "url": "http://localhost:3001/blobs/blobHash004/data",
      },
    ],
    "index": 2,
    "proof": "proof004",
    "size": 1300,
    "transaction": {
      "category": "rollup",
      "rollup": "optimism",
    },
    "txHash": "txHash015",
    "txIndex": 0,
    "versionedHash": "blobHash004",
  },
]
`;

exports[`Blob router > getAll > when getting paginated blob results > should return the correct results when a specific page is requested 1`] = `
[
  {
    "blockHash": "blockHash006",
    "blockNumber": 1006,
    "blockTimestamp": "2023-08-31T12:00:00.000Z",
    "commitment": "0xb4f67eb0771fbbf1b06b88ce0e23383daf994320508d44dd30dbd507f598c0d9b3da5a152e41a0428375060c3803b983",
    "dataStorageReferences": [
      {
        "storage": "postgres",
        "url": "http://localhost:3001/blobs/0x010001c79d78a76fb9b4bab3896ee3ea32f3e2607da7801eb1a92da39d6c1368/data",
      },
      {
        "storage": "swarm",
        "url": "https://gateway.ethswarm.org/access/bzz://some-hash-for-blobHash006",
      },
    ],
    "index": 0,
    "proof": "89cf91c4c8be6f2a390d4262425f79dffb74c174fb15a210182184543bf7394e5a7970a774ee8e0dabc315424c22df0f",
    "size": 1500,
    "transaction": {
      "category": "other",
    },
    "txHash": "0x5be77167b05f39ea8950f11b0da2bdfec6e04055030068b051ac5a43aaf251e9",
    "txIndex": 0,
    "versionedHash": "0x010001c79d78a76fb9b4bab3896ee3ea32f3e2607da7801eb1a92da39d6c1368",
  },
  {
    "blockHash": "blockHash005",
    "blockNumber": 1005,
    "blockTimestamp": "2023-08-28T10:00:00.000Z",
    "commitment": "commitment001",
    "dataStorageReferences": [
      {
        "storage": "google",
        "url": "https://storage.googleapis.com/blobscan-test-bucket/70118930558/ob/Ha/sh/obHash001.txt",
      },
      {
        "storage": "swarm",
        "url": "https://gateway.ethswarm.org/access/bzz://some-hash-for-blobHash001",
      },
    ],
    "index": 0,
    "proof": "proof001",
    "size": 1000,
    "transaction": {
      "category": "other",
    },
    "txHash": "txHash013",
    "txIndex": 1,
    "versionedHash": "blobHash001",
  },
]
`;

exports[`Blob router > getAll > when getting paginated blob results > should return the total number of items when count is provided 1`] = `29`;

exports[`Blob router > getBlobDataByBlobId > when providing an invalid blob id > should fail when providing a hex string with invalid length 1`] = `
"[
  {
    \\"code\\": \\"custom\\",
    \\"message\\": \\"Invalid input length: must be a versioned hash (32 bytes) or a kzg commitment (48 bytes)\\",
    \\"fatal\\": true,
    \\"path\\": [
      \\"id\\"
    ]
  }
]"
`;

exports[`Blob router > getBlobDataByBlobId > when providing an invalid blob id > should fail when providing a non-hex string 1`] = `
"[
  {
    \\"code\\": \\"invalid_string\\",
    \\"message\\": \\"Invalid input: must be a valid hex string\\",
    \\"validation\\": \\"regex\\",
    \\"fatal\\": true,
    \\"path\\": [
      \\"id\\"
    ]
  }
]"
`;

exports[`Blob router > getBlobDataByBlobId > when providing an invalid blob id > should fail when providing a versioned hash with invalid prefix 1`] = `
"[
  {
    \\"code\\": \\"invalid_string\\",
    \\"message\\": \\"Invalid versioned hash: must start with \\\\\\"0x01\\\\\\"\\",
    \\"validation\\": \\"regex\\",
    \\"fatal\\": true,
    \\"path\\": [
      \\"id\\"
    ]
  }
]"
`;

exports[`Blob router > getByBlobId > should fail when getting a blob and the blob data is not available 1`] = `[TRPCError: Failed to get blob from any of the storages]`;

exports[`Blob router > getByBlobId > should fail when trying to get a blob by a non-existent hash 1`] = `[TRPCError: No blob with versioned hash or kzg commitment 'nonExistingHash'.]`;

exports[`Blob router > getByBlobId > should get a blob by kzg commitment 1`] = `
{
  "commitment": "commitment004",
  "data": "0x4fe40fc67f9c3a3ffa2be77d10fe7818",
  "dataStorageReferences": [
    {
      "storage": "google",
      "url": "https://storage.googleapis.com/blobscan-test-bucket/70118930558/ob/Ha/sh/obHash004.txt",
    },
    {
      "storage": "postgres",
      "url": "http://localhost:3001/blobs/blobHash004/data",
    },
  ],
  "proof": "proof004",
  "size": 1300,
  "transactions": [
    {
      "blockHash": "0x7000000000000000000000000000000000000000000000000000000000000000",
      "blockNumber": 1007,
      "blockTimestamp": 2023-08-31T14:00:00.000Z,
      "hash": "txHash015",
      "index": 0,
      "rollup": "optimism",
      "txIndex": 0,
    },
    {
      "blockHash": "0x7000000000000000000000000000000000000000000000000000000000000000",
      "blockNumber": 1007,
      "blockTimestamp": 2023-08-31T14:00:00.000Z,
      "hash": "txHash015",
      "index": 1,
      "rollup": "optimism",
      "txIndex": 0,
    },
    {
      "blockHash": "0x7000000000000000000000000000000000000000000000000000000000000000",
      "blockNumber": 1007,
      "blockTimestamp": 2023-08-31T14:00:00.000Z,
      "hash": "txHash015",
      "index": 2,
      "rollup": "optimism",
      "txIndex": 0,
    },
  ],
  "versionedHash": "blobHash004",
}
`;

exports[`Blob router > getByBlobId > should get a blob by versioned hash 1`] = `
{
  "commitment": "commitment004",
  "data": "0x4fe40fc67f9c3a3ffa2be77d10fe7818",
  "dataStorageReferences": [
    {
      "storage": "google",
      "url": "https://storage.googleapis.com/blobscan-test-bucket/70118930558/ob/Ha/sh/obHash004.txt",
    },
    {
      "storage": "postgres",
      "url": "http://localhost:3001/blobs/blobHash004/data",
    },
  ],
  "proof": "proof004",
  "size": 1300,
  "transactions": [
    {
      "blockHash": "0x7000000000000000000000000000000000000000000000000000000000000000",
      "blockNumber": 1007,
      "blockTimestamp": 2023-08-31T14:00:00.000Z,
      "hash": "txHash015",
      "index": 0,
      "rollup": "optimism",
      "txIndex": 0,
    },
    {
      "blockHash": "0x7000000000000000000000000000000000000000000000000000000000000000",
      "blockNumber": 1007,
      "blockTimestamp": 2023-08-31T14:00:00.000Z,
      "hash": "txHash015",
      "index": 1,
      "rollup": "optimism",
      "txIndex": 0,
    },
    {
      "blockHash": "0x7000000000000000000000000000000000000000000000000000000000000000",
      "blockNumber": 1007,
      "blockTimestamp": 2023-08-31T14:00:00.000Z,
      "hash": "txHash015",
      "index": 2,
      "rollup": "optimism",
      "txIndex": 0,
    },
  ],
  "versionedHash": "blobHash004",
}
`;
