// Vitest Snapshot v1, https://vitest.dev/guide/snapshot.html

exports[`getBlobDataByBlobId > when authorized > should fail when no blob data is found for the provided id 1`] = `"No blob data storage URLs found for blob with id '0x0130c6c0b2ed8e4951560d6c996ccab18486de35aee7a9064c957605c80d90d1'."`;

exports[`getBlobDataByBlobId > when authorized > should fail when the blob data wasn't retrieved from any of the storages 1`] = `"Failed to fetch data for blob with id '0x01f433be851da7e34bf14bf4f21b4c7db4b38afee7ec74d3c576fdce9f8f6734' from any of the storages"`;

exports[`getBlobDataByBlobId > when authorized > should fail when the blob data wasn't retrieved from any of the storages 2`] = `undefined`;

exports[`getBlobDataByBlobId > when authorized > when providing an invalid blob id > should fail when providing a hex string with invalid length 1`] = `
"[
  {
    \\"code\\": \\"custom\\",
    \\"message\\": \\"Invalid input length: must be a versioned hash (32 bytes) or a kzg commitment (48 bytes)\\",
    \\"fatal\\": true,
    \\"path\\": [
      \\"id\\"
    ]
  }
]"
`;

exports[`getBlobDataByBlobId > when authorized > when providing an invalid blob id > should fail when providing a non-hex string 1`] = `
"[
  {
    \\"code\\": \\"invalid_string\\",
    \\"message\\": \\"Invalid input: must be a valid hex string\\",
    \\"validation\\": \\"regex\\",
    \\"fatal\\": true,
    \\"path\\": [
      \\"id\\"
    ]
  }
]"
`;

exports[`getBlobDataByBlobId > when authorized > when providing an invalid blob id > should fail when providing a versioned hash with invalid prefix 1`] = `
"[
  {
    \\"code\\": \\"invalid_string\\",
    \\"message\\": \\"Invalid versioned hash: must start with \\\\\\"0x01\\\\\\"\\",
    \\"validation\\": \\"regex\\",
    \\"fatal\\": true,
    \\"path\\": [
      \\"id\\"
    ]
  }
]"
`;
