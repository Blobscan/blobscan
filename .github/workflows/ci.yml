name: CI

on:
  pull_request_target:
    branches:
      - main
  push:
    branches: ["main"]
  merge_group:

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: ${{ github.ref != 'refs/heads/main' }}

env:
  FORCE_COLOR: 3
  TURBO_TOKEN: ${{ secrets.TURBO_TOKEN }}
  TURBO_TEAM: ${{ secrets.TURBO_TEAM }}

jobs:
  lint:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Setup
        uses: ./tooling/github/setup

      - name: Lint
        run: pnpm lint

  typecheck:
    services:
      postgres:
        image: postgres:16
        env:
          POSTGRES_DB: blobscan_dev
          POSTGRES_USER: blobscan
          POSTGRES_PASSWORD: s3cr3t
        ports:
          - 5432:5432
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Setup
        uses: ./tooling/github/setup

      - name: Setup DB
        uses: ./tooling/github/setup-db

      - name: Typecheck
        run: pnpm type-check

  build:
    services:
      postgres:
        image: postgres:16
        env:
          POSTGRES_DB: blobscan_dev
          POSTGRES_USER: blobscan
          POSTGRES_PASSWORD: s3cr3t
        ports:
          - 5432:5432
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Setup
        uses: ./tooling/github/setup

      - name: Setup DB
        uses: ./tooling/github/setup-db

      - name: Build
        run: pnpm build

  test:
    services:
      postgres:
        image: postgres:16
        env:
          POSTGRES_DB: blobscan_dev
          POSTGRES_USER: blobscan
          POSTGRES_PASSWORD: s3cr3t
        ports:
          - 5432:5432
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
      redis:
        # Docker Hub image
        image: redis
        # Set health checks to wait until redis has started
        ports:
          # Maps port 6379 on service container to the host
          - 6379:6379
        options: >-
          --health-cmd "redis-cli ping"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Setup
        uses: ./tooling/github/setup

      - name: Setup DB
        uses: ./tooling/github/setup-db

      - name: Setup GCS emulator
        uses: fsouza/fake-gcs-action@v0.4.1
        with:
          version: "1.37.2"
          backend: memory
          scheme: http
          data: packages/test/src/fixtures/gcs

      - name: Generate Prisma Client
        run: pnpm db:generate

      - name: Test
        run: pnpm coverage

      - name: Upload coverage reports to Codecov
        uses: codecov/codecov-action@v4
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          slug: Blobscan/blobscan
